<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yimoxiamu.blogback.dao.BlogCommentMapper">
  <resultMap id="BaseResultMap" type="com.yimoxiamu.blogback.entity.BlogComment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="blog_uuid" jdbcType="VARCHAR" property="blog_uuid" />
    <result column="blog_comment" jdbcType="VARCHAR" property="blog_comment" />
    <result column="comment_count" jdbcType="INTEGER" property="comment_count" />
    <result column="create_by" jdbcType="INTEGER" property="create_by" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
    <result column="delflag" jdbcType="VARCHAR" property="delflag" />
    <result column="del_date" jdbcType="TIMESTAMP" property="del_date" />
  </resultMap>
  <sql id="Base_Column_List">
    id, blog_uuid, blog_comment, comment_count, create_by, create_time, delflag, del_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from blog_comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from blog_comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yimoxiamu.blogback.entity.BlogComment">
    insert into blog_comment (id, blog_uuid, blog_comment, 
      comment_count, create_by, create_time, 
      delflag, del_date)
    values (#{id,jdbcType=INTEGER}, #{blog_uuid,jdbcType=VARCHAR}, #{blog_comment,jdbcType=VARCHAR}, 
      #{comment_count,jdbcType=INTEGER}, #{create_by,jdbcType=INTEGER}, #{create_time,jdbcType=TIMESTAMP}, 
      #{delflag,jdbcType=VARCHAR}, #{del_date,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.yimoxiamu.blogback.entity.BlogComment">
    insert into blog_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="blog_uuid != null">
        blog_uuid,
      </if>
      <if test="blog_comment != null">
        blog_comment,
      </if>
      <if test="comment_count != null">
        comment_count,
      </if>
      <if test="create_by != null">
        create_by,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
      <if test="delflag != null">
        delflag,
      </if>
      <if test="del_date != null">
        del_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="blog_uuid != null">
        #{blog_uuid,jdbcType=VARCHAR},
      </if>
      <if test="blog_comment != null">
        #{blog_comment,jdbcType=VARCHAR},
      </if>
      <if test="comment_count != null">
        #{comment_count,jdbcType=INTEGER},
      </if>
      <if test="create_by != null">
        #{create_by,jdbcType=INTEGER},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="delflag != null">
        #{delflag,jdbcType=VARCHAR},
      </if>
      <if test="del_date != null">
        #{del_date,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yimoxiamu.blogback.entity.BlogComment">
    update blog_comment
    <set>
      <if test="blog_uuid != null">
        blog_uuid = #{blog_uuid,jdbcType=VARCHAR},
      </if>
      <if test="blog_comment != null">
        blog_comment = #{blog_comment,jdbcType=VARCHAR},
      </if>
      <if test="comment_count != null">
        comment_count = #{comment_count,jdbcType=INTEGER},
      </if>
      <if test="create_by != null">
        create_by = #{create_by,jdbcType=INTEGER},
      </if>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="delflag != null">
        delflag = #{delflag,jdbcType=VARCHAR},
      </if>
      <if test="del_date != null">
        del_date = #{del_date,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yimoxiamu.blogback.entity.BlogComment">
    update blog_comment
    set blog_uuid = #{blog_uuid,jdbcType=VARCHAR},
      blog_comment = #{blog_comment,jdbcType=VARCHAR},
      comment_count = #{comment_count,jdbcType=INTEGER},
      create_by = #{create_by,jdbcType=INTEGER},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      delflag = #{delflag,jdbcType=VARCHAR},
      del_date = #{del_date,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>